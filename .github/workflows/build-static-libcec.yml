name: Build static libcec

permissions:
  contents: write

env:
  visual_studio_version: 2019
  libcec_version: 6.0.2  # version of libcec this fork is based on

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
      docker_only:
        type: boolean
        description: 'Run only docker builds'
        required: false
        default: false

jobs:
    build-windows:
      if: ${{ github.event_name == 'workflow_dispatch' && !inputs.docker_only }}
      runs-on: windows-latest

      strategy:
        fail-fast: false
        matrix:
          arch: [x86_64]
          build_type: [release, debug]

      steps:
        # Enable tmate debugging of manually-triggered workflows if the input option was provided
        - name: Setup tmate session
          uses: mxschmitt/action-tmate@v3
          if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
          with:
            detached: true
        - name: Checkout repo
          uses: actions/checkout@v4

        - name: Build libcec
          id: build_libcec
          uses: ./.github/actions/build-static-libcec-windows
          with:
            build_type: ${{ matrix.build_type }}
            visual_studio_version: ${{ env.visual_studio_version }}

        - name: Upload build artifacts
          uses: actions/upload-artifact@v4
          with:
            name: libcec-v${{ env.libcec_version }}-${{ matrix.arch }}-pc-windows-msvc-${{ matrix.build_type }}
            path: ${{ steps.build_libcec.outputs.binary_path }}
            if-no-files-found: error

    build-macos:
      if: ${{ github.event_name == 'workflow_dispatch' && !inputs.docker_only }}
      runs-on: macos-latest

      strategy:
        fail-fast: false
        matrix:
          arch: [aarch64]
          build_type: [release, debug]

      steps:
        - name: Checkout repo
          uses: actions/checkout@v4

        - name: Build libcec
          id: build_libcec
          uses: ./.github/actions/build-static-libcec-unix
          with:
            build_type: ${{ matrix.build_type }}

        - name: Upload build artifacts
          uses: actions/upload-artifact@v4
          with:
            name: libcec-v${{ env.libcec_version }}-${{ matrix.arch }}-apple-darwin-${{ matrix.build_type }}
            path: ${{ steps.build_libcec.outputs.binary_path }}
            if-no-files-found: error

    build-linux:
      if: ${{ github.event_name == 'workflow_dispatch' && !inputs.docker_only }}
      runs-on: ubuntu-latest

      strategy:
        fail-fast: false
        matrix:
          arch: [x86_64]
          build_type: [release, debug]

      steps:
        # Enable tmate debugging of manually-triggered workflows if the input option was provided
        - name: Setup tmate session
          uses: mxschmitt/action-tmate@v3
          if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
          with:
            detached: true

        - name: Checkout repo
          uses: actions/checkout@v4
        # for git-describe to work, needed to embed version from git tag
        - run: git fetch --prune --unshallow --tags --recurse-submodules=no

        - name: Install libudev-dev & pkg-config as libcec build dependencies
          run: sudo apt-get install -yq libudev-dev pkg-config
          shell: bash

        - name: Build libcec
          id: build_libcec
          uses: ./.github/actions/build-static-libcec-unix
          with:
            build_type: ${{ matrix.build_type }}
            have_linux_api: true

        - name: Upload build artifacts
          uses: actions/upload-artifact@v4
          with:
            name: libcec-v${{ env.libcec_version }}-${{ matrix.arch }}-unknown-linux-gnu-${{ matrix.build_type }}
            path: ${{ steps.build_libcec.outputs.binary_path }}
            if-no-files-found: error
    
    build-linux-arm:
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.docker_only }}
      runs-on: ubuntu-latest

      strategy:
        fail-fast: true
        matrix:
          targets: 
            - docker_image: ghcr.io/cross-rs/armv7-unknown-linux-gnueabihf:main
              deb_arch: armhf
            - docker_image: ghcr.io/cross-rs/arm-unknown-linux-gnueabi:main
              deb_arch: armel
            - docker_image: ghcr.io/cross-rs/aarch64-unknown-linux-gnu:main
              deb_arch: arm64
          build_type: [release, debug]
      
      container:
          image: ${{ matrix.targets.docker_image }}
          options: --user 1001
        
      steps:
        # Enable tmate debugging of manually-triggered workflows if the input option was provided
        - name: Setup tmate session
          uses: mxschmitt/action-tmate@v3
          if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
          with:
            detached: true

        - name: Install libudev-dev for device detection support
          run: |
            dpkg --add-architecture ${{ matrix.targets.deb_arch }}
            apt-get update && apt-get --assume-yes install libudev-dev:${{ matrix.targets.deb_arch }} \
              || echo "Could not find libudev-udev for this architecture. Libcec device detection might be unavailable"

        - name: Build libcec
          id: build_libcec
          uses: ./.github/actions/build-static-libcec-unix
          with:
            build_type: ${{ matrix.build_type }}

    release:
      if: ${{ github.event_name == 'workflow_dispatch' && !inputs.docker_only }}
      runs-on: ubuntu-latest
      needs: [build-windows, build-macos, build-linux]
      steps:
        - name: Fetch build artifacts
          uses: actions/download-artifact@v4
          with:
            path: assets

        - name: Compress build artifacts
          working-directory: assets
          run: |
            mkdir --verbose ../release
            find * -maxdepth 0 -type d  -print -exec zip -vr ../release/{}.zip {} \;

        - name: Publish release
          uses: softprops/action-gh-release@v2
          with:
            tag_name: EXPERIMENTAL-libcec-v${{ env.libcec_version }}
            files: release/*.zip
            fail_on_unmatched_files: true
            make_latest: true
            body: >
              EXPERIMENTAL This release includes automated [libcec](https://github.com/Pulse-Eight/libcec)
              builds for version ${{ env.libcec_version }}.